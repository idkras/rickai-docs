#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ GitHub Pages –¥–ª—è Rick.ai –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
"""

import requests
import subprocess
import sys
from pathlib import Path


def run_command(command, capture_output=True):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        result = subprocess.run(
            command, 
            shell=True, 
            capture_output=capture_output, 
            text=True
        )
        return result
    except subprocess.CalledProcessError as e:
        return e


def check_github_pages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å GitHub Pages"""
    url = "https://idkras.github.io/rickai-docs/"
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub Pages...")
    print(f"URL: {url}")
    
    try:
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            print("‚úÖ GitHub Pages –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå GitHub Pages –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


def check_gh_pages_branch():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ç–∫—É gh-pages"""
    print("\nüåø –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ç–∫—É gh-pages...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ç–∫—É
    result = run_command("git branch -a | grep gh-pages")
    if result.returncode == 0:
        print("‚úÖ –í–µ—Ç–∫–∞ gh-pages —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç
        result = run_command("git log gh-pages -1 --oneline")
        if result.returncode == 0:
            print(f"üìù –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: {result.stdout.strip()}")
    else:
        print("‚ùå –í–µ—Ç–∫–∞ gh-pages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    return True


def check_mkdocs_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MkDocs"""
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MkDocs...")
    
    if not Path("mkdocs.yml").exists():
        print("‚ùå mkdocs.yml –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("‚úÖ mkdocs.yml –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    result = run_command("mkdocs build --dirty")
    if result.returncode == 0:
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MkDocs –≤–∞–ª–∏–¥–Ω–∞")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MkDocs")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Rick.ai Documentation")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path("mkdocs.yml").exists():
        print("‚ùå mkdocs.yml –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ –ø–∞–ø–∫–µ rickai_docs")
        sys.exit(1)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏
    config_ok = check_mkdocs_config()
    branch_ok = check_gh_pages_branch()
    pages_ok = check_github_pages()
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"   –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MkDocs: {'‚úÖ' if config_ok else '‚ùå'}")
    print(f"   –í–µ—Ç–∫–∞ gh-pages: {'‚úÖ' if branch_ok else '‚ùå'}")
    print(f"   GitHub Pages: {'‚úÖ' if pages_ok else '‚ùå'}")
    
    if all([config_ok, branch_ok, pages_ok]):
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞: https://idkras.github.io/rickai-docs/")
    else:
        print("\n‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        if not pages_ok:
            print("üí° GitHub Pages –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π (–¥–æ 10 –º–∏–Ω—É—Ç)")


if __name__ == "__main__":
    main()
