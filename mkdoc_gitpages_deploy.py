#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Rick.ai
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
"""

import subprocess
import sys
import os
import shutil
from datetime import datetime
from pathlib import Path


def run_command(command, check=True):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É"""
    try:
        subprocess.run(command, shell=True, check=check)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


def copy_symlinks_to_real_files():
    """–ö–æ–ø–∏—Ä—É–µ—Ç —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Å–±–æ—Ä–∫–∏"""
    print("üîó –ö–æ–ø–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã...")
    
    docs_dir = Path("docs")
    if not docs_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ docs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    copied_files = []
    symlink_info = []  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–∫–∞—Ö
    
    # –ò—â–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –≤ –ø–∞–ø–∫–µ docs
    for file_path in docs_dir.rglob("*"):
        if file_path.is_symlink():
            try:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–µ
                target_path = file_path.resolve()
                symlink_info.append({
                    'file_path': file_path,
                    'target_path': target_path
                })
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if target_path.exists():
                    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–ø–∏—é
                    temp_path = file_path.with_suffix(file_path.suffix + ".temp")
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ü–µ–ª–µ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
                    shutil.copy2(target_path, temp_path)
                    
                    # –£–¥–∞–ª—è–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É
                    file_path.unlink()
                    
                    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                    temp_path.rename(file_path)
                    
                    copied_files.append(str(file_path))
                    print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {file_path.name}")
                else:
                    print(f"‚ùå –¶–µ–ª–µ–≤–æ–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {target_path}")
                    print(f"‚ùå –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ {file_path} —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª")
                    return False
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ {file_path}: {e}")
                return False
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–∫–∞—Ö –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    if symlink_info:
        save_symlink_info(symlink_info)
    
    if copied_files:
        print(f"üìã –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(copied_files)}")
    else:
        print("‚ÑπÔ∏è  –°–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    return True


def save_symlink_info(symlink_info):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–∫–∞—Ö"""
    info_file = Path(".symlink_info")
    with open(info_file, 'w') as f:
        for info in symlink_info:
            f.write(f"{info['file_path']}|{info['target_path']}\n")


def restore_symlinks():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è"""
    print("üîó –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏...")
    
    info_file = Path(".symlink_info")
    if not info_file.exists():
        print("‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    restored_count = 0
    
    with open(info_file, 'r') as f:
        for line in f:
            try:
                file_path_str, target_path_str = line.strip().split('|')
                file_path = Path(file_path_str)
                target_path = Path(target_path_str)
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
                if file_path.exists():
                    file_path.unlink()
                
                # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É
                file_path.symlink_to(target_path)
                restored_count += 1
                print(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞: {file_path.name}")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ {file_path_str}: {e}")
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    info_file.unlink()
    
    if restored_count > 0:
        print(f"üìã –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å—Å—ã–ª–æ–∫: {restored_count}")





def main():
    """–ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π"""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Rick.ai")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path("mkdocs.yml").exists():
        print("‚ùå mkdocs.yml –Ω–µ –Ω–∞–π–¥–µ–Ω")
        sys.exit(1)
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    if not copy_symlinks_to_real_files():
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫")
        sys.exit(1)
    
    # Git –æ–ø–µ—Ä–∞—Ü–∏–∏
    print("üìù Git –æ–ø–µ—Ä–∞—Ü–∏–∏...")
    run_command("git add .")
    
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    run_command(f'git commit -m "Quick update {timestamp}"')
    run_command("git push origin main")
    
    # –î–µ–ø–ª–æ–π
    print("üåê –î–µ–ø–ª–æ–∏–º –Ω–∞ GitHub Pages...")
    if not run_command("mkdocs gh-deploy --force"):
        sys.exit(1)
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏
    restore_symlinks()
    
    print("‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("üìñ https://idkras.github.io/rickai-docs/")


if __name__ == "__main__":
    main()
